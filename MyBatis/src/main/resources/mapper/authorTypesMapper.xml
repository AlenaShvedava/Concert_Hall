<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "org/apache/ibatis/builder/xml/mybatis-3-mapper.dtd">
<mapper namespace="pl.solvd.concerthalls.DAO.interfaces.IAuthorTypesDAO">
    <sql id="body">
        t.id as author_type_id,
        t.type as author_type_type
    </sql>
    <select id="getEntityById" resultMap="AuthorTypesResultMap">
        SELECT
        <include refid="body"/>
        FROM
        authorTypes t
        WHERE t.id = #{id}
    </select>
    <select id="getAll" resultMap="AuthorTypesResultMap">
        SELECT
        <include refid="body"/>
        FROM
        authorTypes t
    </select>
    <insert id="addEntity" useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO authorTypes (id, type)
        VALUES (#{id}, #{type})
    </insert>
    <update id="updateEntity">
        UPDATE authorTypes SET
        type = #{type},
        WHERE id = #{id}
    </update>
    <delete id="deleteEntity">
        DELETE FROM authorTypes WHERE id = #{id}
    </delete>

    <select id="findAuthorsTypesByAuthorsId" resultMap="authorTypesResultMap">
        SELECT
        t.id as author_types_id,
        t.type as author_types_type,
        <include refid="pl.solvd.concerthalls.DAO.interfaces.IAuthorsDAO.body"/>
        FROM
        AuthorTypes t
        LEFT JOIN authorsHasAuthorTypes AS at
        ON t.id = at.authorTypesId
        WHERE a.id = #{id}
    </select>
    <resultMap id="authorTypesResultMap" type="pl.solvd.concerthalls.binary.AuthorTypes" autoMapping="false">
        <id column="author_types_id" property="id"/>
        <result column="author_types_type" property="type"/>
        <collection property="authors"
                    resultMap="pl.solvd.concerthalls.binary.authorsResultMap"/>
    </resultMap>
</mapper>
